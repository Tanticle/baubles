plugins {
    id 'java-library'
    id 'idea'
    id 'net.neoforged.gradle.userdev' version '7.0.107'
}

version = mod_version
group = mod_group_id

base { archivesName = mod_id }

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

sourceSets { api; main; example; }

runs {
    configureEach {
        systemProperty 'terminal.ansi', 'true'
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    example {
        modSource project.sourceSets.example
        configure 'client'
    }
    client { systemProperty 'forge.enabledGameTestNamespaces', project.mod_id }
    server { systemProperty 'forge.enabledGameTestNamespaces', project.mod_id; programArgument '--nogui' }
    gameTestServer { systemProperty 'forge.enabledGameTestNamespaces', project.mod_id }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    apiImplementation "net.neoforged:neoforge:${neo_version}"
    exampleImplementation "net.neoforged:neoforge:${neo_version}"
    implementation sourceSets.api.output
    exampleImplementation sourceSets.api.output
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version: neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties + [project: project]
    }
}
